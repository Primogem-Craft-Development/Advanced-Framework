//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

loom {
    // accessWidenerPath = file("src/main/resources/META-INF/aw.accesswidener")
}

repositories {
    mavenCentral() {
        content {
            includeGroup "io.github.primogemstudio"
        }
    }
    maven { url = 'https://raw.githubusercontent.com/kotlin-graphics/mary/master' }
    maven { url = "https://raw.fastgit.org/kotlin-graphics/mary/master" }
    maven { url = 'https://www.jitpack.io' }
    maven {
        url = 'https://maven.aliyun.com/repository/central'
        content {
            excludeGroup "io.github.primogemstudio"
        }
    }
    maven {
        url = 'https://api.modrinth.com/maven'
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases/'
    }
    maven { url = 'https://maven.terraformersmc.com/releases/' }
    maven { url = 'https://maven.aliyun.com/repository/jcenter' }
    maven { url = 'https://maven.aliyun.com/repository/google' }
    maven { url = 'https://maven.aliyun.com/repository/public' }
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url = 'https://maven.shedaniel.me' }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    include(modImplementation("org.ladysnake:satin:1.14.0"))
    modRuntimeOnly "com.terraformersmc:modmenu:7.2.2"
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version").exclude(group: "net.fabricmc.fabric-api")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version").exclude(group: "net.fabricmc.fabric-api")
    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:$rei_version").exclude(group: "net.fabricmc.fabric-api")
    ext.imguiVersion = "1.89.7-1"
    ["gl", "glfw", "core"].each {
        implementation("kotlin.graphics:imgui-$it:$imguiVersion") {
            exclude group: "org.lwjgl"
        }
    }
    include(implementation("org.jetbrains.kotlin:kotlin-reflect:1.8.20"))
    include(implementation("org.jetbrains.kotlin:kotlin-stdlib:1.9.20"))
    include(implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"))
    include(implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.5.2"))
    include(implementation("io.github.primogemstudio:mmdbase:0.0.1-alpha3"))
    include(implementation("kotlin.graphics:glm:0.9.9.1-11"))

    modRuntimeOnly "maven.modrinth:sodium:mc1.20.1-0.5.3"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

kotlin {
    jvmToolchain(17)
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = 'advancedfmk'
            version = version + "-" + minecraft_version

            from components.kotlin
            artifact sourcesJar
        }
    }

    repositories {
        maven {
            url = layout.projectDirectory.dir("../maven")
        }
    }
}